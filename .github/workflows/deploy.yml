name: Deploy

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
      channel:
        description: 'Release Channel (live/beta)'
        required: true

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Validate channel and branch
      run: |
        $expectedBranch = if ("${{ inputs.channel }}" -eq "live") { "main" } else { "dev" }
        $actualBranch = "${{ github.ref_name }}"
        if ($expectedBranch -ne $actualBranch) {
          Write-Error "Channel '${{ inputs.channel }}' must be deployed from branch '$expectedBranch'. Currently on '$actualBranch'."
          exit 1
        }

    - name: Validate project and asset files
      run: |
        $requiredFiles = @(
          "./VRCOSC/app.ico",
          "./Logo.png",
          "./VRCOSC/VRCOSC.csproj",
          "./VRCOSC.App/VRCOSC.App.csproj"
        )
        foreach ($file in $requiredFiles) {
          if (-not (Test-Path $file)) {
            Write-Error "Missing required file: $file"
            exit 1
          }
        }

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'
    
    - name: Install Velopack CLI
      run: dotnet tool install --global vpk

    - name: Publish desktop app
      run: dotnet publish VRCOSC/VRCOSC.csproj --configuration Release -o ./publish

    - name: Package with Velopack
      run: vpk pack -u "VRCOSC" --packAuthors "VolcanicArts" --packTitle "VRCOSC" -p "./publish" -e "VRCOSC.exe" -o "./releases" -i "./VRCOSC/app.ico" -s "./Logo.png" -c "${{ inputs.channel }}" -v "${{ inputs.version }}"

    - name: Pack NuGet SDK
      run: dotnet pack VRCOSC.App/VRCOSC.App.csproj --configuration Release -p:PackageVersion=${{ inputs.version }} -o ./nuget

    - name: Generate GitHub release body
      id: release_body
      shell: pwsh
      run: |
        $version = "${{ inputs.version }}"
        $channel = "${{ inputs.channel }}"
    
        if ($channel -eq "live") {
          $body = @()
          $body += "## Installation"
          $body += "- Download and run [VRCOSCSetup.exe](https://github.com/VolcanicArts/VRCOSC/releases/latest/download/VRCOSCSetup.exe) (It may get blocked by your antivirus (including Windows Defender)). A shortcut will be made on your desktop and start menu."
          $body += "- Join the [Discord Server](https://vrcosc.com/discord) to get help or make suggestions."
          $body += "- If you have trouble with the software or prefabs check the [FAQ](https://vrcosc.com/docs/faq)."
          $body += ""
          $body += "Changelog: https://vrcosc.com/changelog/$version"
        } else {
          $body = @("This is a beta release. Please download the latest live release if you do not intend on testing beta features.")
        }
    
        $output = $body -join "`n"
        echo "body<<EOF"
        echo "$output"
        echo "EOF

    - name: List contents of publish folder
      run: |
        echo "=== ./publish ==="
        dir ./publish

    - name: List contents of releases folder
      run: |
        echo "=== ./releases ==="
        dir ./releases
